<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    
    <!-- 开启controller注解支持 -->
    <context:component-scan base-package="com.motang.webapp.web.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>
    
    <!-- bean validator -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    
    <!-- 会自动注册了validator  ConversionService  -->
    <mvc:annotation-driven
        validator="validator"
        content-negotiation-manager="contentNegotiationManager"
        >
        <!--conversion-service="conversionService"-->
        <!--enableMatrixVariables="true">-->
        <!-- 异步支持 默认30秒超时 -->
        <!-- <mvc:async-support default-timeout="30000" task-executor="executor"/> -->

        <mvc:message-converters register-defaults="true">
            <!-- StringHttpMessageConverter编码为UTF-8，防止乱码 -->
            <ref bean="stringHttpMessageConverter" />

            <!-- 对声明@ResponseBody -->
            <ref bean="fastJsonHttpMessageConverter" />
        </mvc:message-converters>

        <!-- 自定义参数解析器，如分页 -->
        <!-- 
        <mvc:argument-resolvers>
            <bean class="com.motang.webapp.web.method.annotation.PageableMethodArgumentResolver"/>
        </mvc:argument-resolvers>
         -->
         
        <!-- 自定义returnValue解析器 -->
        <!-- <mvc:return-value-handlers> -->
            <!-- 对声明@ResponseJsonBody -->
            <!-- <bean id="reponseJsonBodyReturnValueHandler" class="com.sf.hkmall.web.plugin.annotation.handler.ReponseJsonBodyMethodReturnValueHandler"> -->
            <!--    <property name="messageConverters"> -->
            <!--        <list> -->
            <!--            <ref bean="fastJsonHttpMessageConverter" /> -->
            <!--        </list> -->
            <!--    </property> -->
            <!-- </bean> -->
        <!-- </mvc:return-value-handlers> -->
    </mvc:annotation-driven>
    
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
        <constructor-arg value="UTF-8" />
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <bean id="fastJsonHttpMessageConverter" class="com.motang.webapp.web.plugin.messageconverter.CustomizeFastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
        <property name="features">
            <array>
                <value>QuoteFieldNames</value>
                <value>UseISO8601DateFormat</value>
                <value>WriteMapNullValue</value>
                <value>WriteNullStringAsEmpty</value>
                <value>WriteNullListAsEmpty</value>
                <value>WriteNullNumberAsZero</value>
                <value>BrowserCompatible</value>
                <value>PrettyFormat</value>
            </array>
        </property>
    </bean>

    <!-- 内容协商管理器  -->
    <!--1、首先检查路径扩展名（如my.json）；2、其次检查Parameter（如my?format=json）；3、检查Accept Header-->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
        <property name="favorPathExtension" value="true"/>
        <!-- 用于开启 /userinfo/123?format=json 的支持 -->
        <property name="favorParameter" value="true"/>
        <property name="parameterName" value="format"/>
        <!-- 是否忽略Accept Header -->
        <property name="ignoreAcceptHeader" value="false"/>

        <property name="mediaTypes"> <!--扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用  -->
            <value>
                json=application/json
                xml=application/xml
                html=text/html
            </value>
        </property>
        <!-- 默认的content type -->
        <property name="defaultContentType" value="text/html"/>
    </bean>

</beans>